// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'wpm-mcp-server-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import WpmMcpServer from 'wpm-mcp-server';

export const metadata: Metadata = {
  resource: 'bankaccounts',
  operation: 'write',
  tags: [],
  httpMethod: 'put',
  httpPath: '/v1/bankaccounts/{bankAccountId}',
  operationId: 'ExternalApiBankAccounts_UpdateBankAccount',
};

export const tool: Tool = {
  name: 'update_bankaccounts',
  description:
    'Updates a bank account.;\r\n            \r\n\r\n<strong>NOTE:</strong> Any field not included in the update request will be set to either an empty string or `null` in the database depending on the field definition. \r\nThe recommended workflow to ensure no data is inadvertently overwritten is to execute a `GET` request for the resource you\'re about to update and then use this response to fill any of the fields that are not being updated.\r\n            \r\n\r\n<h4>Required permission(s):</h4><span class="permissionBlock">Accounting > Banking</span> - `View` `Edit`',
  inputSchema: {
    type: 'object',
    properties: {
      bankAccountId: {
        type: 'integer',
      },
      BankAccountType: {
        type: 'string',
        description: 'Type of bank account.',
        enum: ['Checking', 'Savings'],
      },
      CheckPrintingInfo: {
        type: 'object',
        description: 'Check printing info.',
        properties: {
          CheckLayoutType: {
            type: 'string',
            description: 'The check layout type.',
            enum: [
              'Voucher1StubBottomMemo1Signature',
              'Voucher2StubBottomMemo1Signature',
              'Voucher2StubBottomMemo2Signatures',
              'Voucher2StubTopMemo',
              'Voucher2StubsPrePrintedLayout',
            ],
          },
          EnableLocalCheckPrinting: {
            type: 'boolean',
            description: 'Indicates whether local check printing is enabled.',
          },
          EnableRemoteCheckPrinting: {
            type: 'boolean',
            description: 'Indicates whether remote check printing is enabled.',
          },
          BankInformationLine1: {
            type: 'string',
            description: 'Bank information line 1.',
          },
          BankInformationLine2: {
            type: 'string',
            description: 'Bank information line 2.',
          },
          BankInformationLine3: {
            type: 'string',
            description: 'Bank information line 3.',
          },
          BankInformationLine4: {
            type: 'string',
            description: 'Bank information line 4.',
          },
          BankInformationLine5: {
            type: 'string',
            description: 'Bank information line 5.',
          },
          CompanyInformationLine1: {
            type: 'string',
            description: 'Company information 1.',
          },
          CompanyInformationLine2: {
            type: 'string',
            description: 'Company information 2.',
          },
          CompanyInformationLine3: {
            type: 'string',
            description: 'Company information 3.',
          },
          CompanyInformationLine4: {
            type: 'string',
            description: 'Company information 4.',
          },
          CompanyInformationLine5: {
            type: 'string',
            description: 'Company information 5.',
          },
          FractionalNumber: {
            type: 'string',
            description:
              'The fractional form of the routing number. Typically is used to identify the bank of the check in cases where the MICR is unreadable.',
          },
          SignatureHeading: {
            type: 'string',
            description: 'The signature heading.',
          },
        },
        required: ['CheckLayoutType', 'EnableLocalCheckPrinting', 'EnableRemoteCheckPrinting'],
      },
      Country: {
        type: 'string',
        description: 'The country the bank account exists in.',
        enum: [
          'Afghanistan',
          'Akrotiri',
          'Albania',
          'Algeria',
          'AmericanSamoa',
          'Andorra',
          'Angola',
          'Anguilla',
          'Antarctica',
          'AntiguaandBarbuda',
          'Argentina',
          'Armenia',
          'Aruba',
          'AshmoreandCartierIslands',
          'Australia',
          'Austria',
          'Azerbaijan',
          'Bahamas',
          'Bahrain',
          'Bangladesh',
          'Barbados',
          'BassasdaIndia',
          'Belarus',
          'Belgium',
          'Belize',
          'Benin',
          'Bermuda',
          'Bhutan',
          'Bolivia',
          'BosniaandHerzegovina',
          'Botswana',
          'BouvetIsland',
          'Brazil',
          'BritishIndianOceanTerritory',
          'BritishVirginIslands',
          'Brunei',
          'Bulgaria',
          'BurkinaFaso',
          'Burma',
          'Burundi',
          'Cambodia',
          'Cameroon',
          'Canada',
          'CapeVerde',
          'CaymanIslands',
          'CentralAfricanRepublic',
          'Chad',
          'Chile',
          'China',
          'ChristmasIsland',
          'ClippertonIsland',
          'CocosIslands',
          'Colombia',
          'Comoros',
          'DemocraticRepublicOfTheCongo',
          'RepublicOfTheCongo',
          'CookIslands',
          'CoralSeaIslands',
          'CostaRica',
          'CotedIvoire',
          'Croatia',
          'Cuba',
          'Cyprus',
          'CzechRepublic',
          'Denmark',
          'Dhekelia',
          'Djibouti',
          'Dominica',
          'DominicanRepublic',
          'Ecuador',
          'Egypt',
          'ElSalvador',
          'EquatorialGuinea',
          'Eritrea',
          'Estonia',
          'Ethiopia',
          'EuropaIsland',
          'FalklandIslands',
          'FaroeIslands',
          'Fiji',
          'Finland',
          'France',
          'FrenchGuiana',
          'FrenchPolynesia',
          'FrenchSouthernandAntarcticLands',
          'Gabon',
          'Gambia',
          'GazaStrip',
          'Georgia',
          'Germany',
          'Ghana',
          'Gibraltar',
          'GloriosoIslands',
          'Greece',
          'Greenland',
          'Grenada',
          'Guadeloupe',
          'Guam',
          'Guatemala',
          'Guernsey',
          'Guinea',
          'GuineaBissau',
          'Guyana',
          'Haiti',
          'HeardIslandandMcDonaldIslands',
          'VaticanCity',
          'Honduras',
          'HongKong',
          'Hungary',
          'Iceland',
          'India',
          'Indonesia',
          'Iran',
          'Iraq',
          'Ireland',
          'IsleofMan',
          'Israel',
          'Italy',
          'Jamaica',
          'JanMayen',
          'Japan',
          'Jersey',
          'Jordan',
          'JuandeNovaIsland',
          'Kazakhstan',
          'Kenya',
          'Kiribati',
          'NorthKorea',
          'SouthKorea',
          'Kuwait',
          'Kyrgyzstan',
          'Laos',
          'Latvia',
          'Lebanon',
          'Lesotho',
          'Liberia',
          'Libya',
          'Liechtenstein',
          'Lithuania',
          'Luxembourg',
          'Macau',
          'Macedonia',
          'Madagascar',
          'Malawi',
          'Malaysia',
          'Maldives',
          'Mali',
          'Malta',
          'MarshallIslands',
          'Martinique',
          'Mauritania',
          'Mauritius',
          'Mayotte',
          'Mexico',
          'Micronesia',
          'Moldova',
          'Monaco',
          'Mongolia',
          'Montserrat',
          'Morocco',
          'Mozambique',
          'Namibia',
          'Nauru',
          'NavassaIsland',
          'Nepal',
          'Netherlands',
          'NetherlandsAntilles',
          'NewCaledonia',
          'NewZealand',
          'Nicaragua',
          'Niger',
          'Nigeria',
          'Niue',
          'NorfolkIsland',
          'NorthernMarianaIslands',
          'Norway',
          'Oman',
          'Pakistan',
          'Palau',
          'Panama',
          'PapuaNewGuinea',
          'ParacelIslands',
          'Paraguay',
          'Peru',
          'Philippines',
          'PitcairnIslands',
          'Poland',
          'Portugal',
          'PuertoRico',
          'Qatar',
          'Reunion',
          'Romania',
          'Russia',
          'Rwanda',
          'SaintHelena',
          'SaintKittsandNevis',
          'SaintLucia',
          'SaintPierreandMiquelon',
          'SaintVincentandtheGrenadines',
          'Samoa',
          'SanMarino',
          'SaoTomeandPrincipe',
          'SaudiArabia',
          'Senegal',
          'SerbiaandMontenegro',
          'Seychelles',
          'SierraLeone',
          'Singapore',
          'Slovakia',
          'Slovenia',
          'SolomonIslands',
          'Somalia',
          'SouthAfrica',
          'SouthGeorgiaandtheSouthSandwichIslands',
          'Spain',
          'SpratlyIslands',
          'SriLanka',
          'Sudan',
          'Suriname',
          'Svalbard',
          'Swaziland',
          'Sweden',
          'Switzerland',
          'Syria',
          'Taiwan',
          'Tajikistan',
          'Tanzania',
          'Thailand',
          'TimorLeste',
          'Togo',
          'Tokelau',
          'Tonga',
          'TrinidadandTobago',
          'TromelinIsland',
          'Tunisia',
          'Turkey',
          'Turkmenistan',
          'TurksandCaicosIslands',
          'Tuvalu',
          'Uganda',
          'Ukraine',
          'UnitedArabEmirates',
          'UnitedKingdom',
          'UnitedStates',
          'Uruguay',
          'Uzbekistan',
          'Vanuatu',
          'Venezuela',
          'Vietnam',
          'VirginIslands',
          'WakeIsland',
          'WallisandFutuna',
          'WestBank',
          'WesternSahara',
          'Yemen',
          'Zambia',
          'Zimbabwe',
        ],
      },
      Name: {
        type: 'string',
        description: 'Bank account name.',
      },
      AccountNumber: {
        type: 'string',
        description: 'Bank account number.',
      },
      Description: {
        type: 'string',
        description: 'Bank account description.',
      },
      RoutingNumber: {
        type: 'string',
        description:
          'Bank routing number. If the bank is in Canada, the routing number should be provided as a zero followed by the three digit institution number, followed by the five digit transit number.',
      },
    },
  },
};

export const handler = async (client: WpmMcpServer, args: Record<string, unknown> | undefined) => {
  const { bankAccountId, ...body } = args as any;
  return asTextContentResult(await client.bankaccounts.update(bankAccountId, body));
};

export default { metadata, tool, handler };
